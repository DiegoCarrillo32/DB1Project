USE INVENTARIO_IACSA
GO
--SE REALIZA EL INSERT DE LOS PRESTAMOS Y SOLICITANTE, VERIFICANDO QUE NO HAYAN ACTIVOS REPETIDOS EN LA TABLA DE PRESTAMOS
CREATE OR ALTER PROC INSERT_PRESTAMOS(@ID_ACTIVO SMALLINT,@SOLICITANTE CHAR(40))
AS
    DECLARE @ID_T TINYINT,@ERROR BIT;
    SET @ID_T = (SELECT COUNT(ID_ACTIVO) FROM PRESTAMOS WHERE @ID_ACTIVO = ID_ACTIVO);
    BEGIN TRANSACTION
    IF @ID_T = 0  --VERIFICA QUE NO HAYAN DATOS REPETIDOS EN LA TABLA 
    BEGIN 
        INSERT INTO prestamos(ID_ACTIVO)VALUES(
            @ID_ACTIVO)
        --El solicitante va a ser el id del usuario
        INSERT INTO SOLICITANTE(ID_USUARIO) VALUES(@SOLICITANTE)
        IF @@ERROR>0
        BEGIN
            PRINT('NO SE PUEDO INSERTAR EL PRESTAMO')
            ROLLBACK TRANSACTION
        END
        ELSE
        BEGIN 
            PRINT('EL PRESTAMO SE HA REGISTRADO')
            COMMIT TRANSACTION
        END
    END
    ELSE
    BEGIN 
        PRINT('NO SE PUEDEN INSERTAR 2 PRESTAMOS A UN ACTIVO')
        ROLLBACK TRANSACTION
    END
GO
--BORRA DATOS DE PRESTAMO Y SOLICITANTE
CREATE OR ALTER PROC DELETE_PRESTAMOS(@ID_PRESTAMO SMALLINT)
AS
    -- Delete rows from table 'TableName'
    DELETE FROM SOLICITANTE
    WHERE 	ID_PRESTAMO = @ID_PRESTAMO

    -- Delete rows from table 'TableName'
    DELETE FROM [dbo].[PRESTAMOS]
    WHERE 	ID_PRESTAMO = @ID_PRESTAMO
 
GO
--CAMBIA LOS DATOS DE PRESTAMOS 
CREATE OR ALTER PROCEDURE UPDATE_PRESTAMOS(@id_prestamo SMALLINT,@estado BIT,@fecha_so DATE,@fecha_de DATE)
AS
    DECLARE 
        @ID TINYINT;
        SET @ID = (SELECT COUNT(ID_PRESTAMO) FROM PRESTAMOS WHERE @ID_PRESTAMO = ID_PRESTAMO);
    BEGIN TRANSACTION
    IF @ID > 0
        BEGIN
        UPDATE PRESTAMOS
        SET 
            [ESTADO] = @ESTADO,
            [FECHA_SO] = @FECHA_SO,
            [FECHA_DE] = @FECHA_DE
            WHERE ID_PRESTAMO = @ID_PRESTAMO;
            PRINT('SE HA ACTUALIZADO LA FILA DE PRESTAMOS')
            COMMIT TRANSACTION
        END
    ELSE
        BEGIN
        PRINT('NO SE ENCONTRÃ“ EL IDENTIFICADOR')
        ROLLBACK TRANSACTION
        END


GO

